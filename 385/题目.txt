
2
3

Explanation:

The code for java is like this:

ArrayList<Integer> list = ArrayListManager.create(5);
list.get(0);  // should return 0
list.get(1);  // should return 1
list.get(4);  // should return 4

// clone_list should be [0,1,2,3,4]
ArrayList<Integer> clone_list = ArrayListManager.clone(list);

ArrayListManager.get(list, 2);  // should return 2
ArrayListManager.indexOf(list, 1); // should return 1
ArrayListManager.indexOf(list, 10); // should return -1
ArrayListManager.remove(list, 3); // list will become [0, 1, 2, 4]
ArrayListManager.get(list, 3); // as 3 has been removed, should return 4
ArrayListManager.set(list, 2, 3); // list will become [0, 1, 3, 4]

clone_list.get(2); // should return 2
clone_list.get(3); // should return 3

    DifficultyEasy
    Total Accepted2253
    Total Submitted5670
    Accepted Rate39%

 Show Tags
Leaderboard - Java
mnphd
480ms
rub
484ms
z73
484ms
kpkym
484ms
Cipe
487ms
Note
def indexOf(self, list, val): # Write your code here if val in list: return list.index(val) else: return -1 没有if val判断会出现输入列表中没有的元素时trace back error 同时，样例中要求这种情况下返回-1
avatargongzheng
Created at 9 days ago
不熟悉不了解ArrayList的用法 注意不要exceed memory limit，仍不理解为什么会超过memory limit 仍不理解clone的dist的做法 public class ArrayListManager { /** * @param n: You should generate an array list of n elements. * @return: The array list your just created. */ public static ArrayList<Integer> create(int n) { // Write your code here ArrayList<Integer> list = new ArrayList<Integer>(); for (int i = 0; i < n; i++) { list.add(i); } return list; } /** * @param list: The list you need to clone * @return: A deep copyed array list from the given list */ public static ArrayList<Integer> clone(ArrayList<Integer> list) { // Write your code here ArrayList<Integer> dist = new ArrayList<Integer>(); for (Integer a : list) dist.add(a); return dist; //return list; } /** * @param list: The array list to find the kth element * @param k: Find the kth element * @return: The kth element */ public static int get(ArrayList<Integer> list, int k) { // Write your code here return list.get(k); } /** * @param list: The array list * @param k: Find the kth element, set it to val * @param val: Find the kth element, set it to val */ public static void set(ArrayList<Integer> list, int k, int val) { // write your code here list.set(k, val); } /** * @param list: The array list to remove the kth element * @param k: Remove the kth element */ public static void remove(ArrayList<Integer> list, int k) { // write tour code here list.remove(k); } /** * @param list: The array list. * @param val: Get the index of the first element that equals to val * @return: Return the index of that element */ public static int indexOf(ArrayList<Integer> list, int val) { // Write your code here if (list == null) return -1; return list.indexOf(val); } }
avatarsibing1915563868
Created at 2 months ago
** def remove(self, list, k): # write tour code here # list.pop(k) list[k:k + 1] = [] ## CANNOT use list[k] = [] here, does NOT work **it will replace list[k] with [] list**
avatargffysy
Created at 3 months ago
Discuss
cnkyzz ・ Last reply by ・ cnkyzz ・ a year ago
385. ArrayList
中文
English

Implement an ArrayListManager which can:

    create(n). Create an ArrayList of integers contains [0, 1, 2, ... n-1]
    clone(list). Clone a list. The cloned list should independent with the original list.
    get(list, index). Get the element on the index position of the list.
    set(list, index, val). Change the value the element of index position to given val.
    remove(list, index). Remove the element on the index position.
    indexOf(list, val). Find the first index of element that equals to val and return its index.

Please use the methods provided by ArrayList. See documents：ArrayList Document
Example

Input:

create(5)
get([0,1,2,3,4], 0)
get([0,1,2,3,4], 1)
get([0,1,2,3,4], 4)
clone([0,1,2,3,4])
get([0,1,2,3,4], 2)
indexOf([0,1,2,3,4], 1)
indexOf([0,1,2,3,4], 10)
remove([0,1,2,3,4], 3)
get([0,1,2,4], 3)
set([0,1,2,4], 2, 3)
get([0,1,2,3,4], 2)
get([0,1,2,3,4], 3)

Output:

[0,1,2,3,4]
0
1
4
[0,1,2,3,4]
2
1
-1
[0,1,2,4]
4
[0,1,3,4]
2
3

Explanation:

The code for java is like this:

ArrayList<Integer> list = ArrayListManager.create(5);
list.get(0);  // should return 0
list.get(1);  // should return 1
list.get(4);  // should return 4

// clone_list should be [0,1,2,3,4]
ArrayList<Integer> clone_list = ArrayListManager.clone(list);

ArrayListManager.get(list, 2);  // should return 2
ArrayListManager.indexOf(list, 1); // should return 1
ArrayListManager.indexOf(list, 10); // should return -1
ArrayListManager.remove(list, 3); // list will become [0, 1, 2, 4]
ArrayListManager.get(list, 3); // as 3 has been removed, should return 4
ArrayListManager.set(list, 2, 3); // list will become [0, 1, 3, 4]

clone_list.get(2); // should return 2
clone_list.get(3); // should return 3


955. Implement Queue by Circular Array
ÖÐÎÄ
English

Implement queue by circulant array. You need to support the following methods:

    CircularQueue(n): initialize a circular array with size n to store elements
    boolean isFull(): return true if the array is full
    boolean isEmpty(): return true if there is no element in the array
    void enqueue(element): add an element to the queue
    int dequeue(): pop an element from the queue

Example

Example 1:

Input:
CircularQueue(5)
isFull()
isEmpty()
enqueue(1)
enqueue(2)
dequeue()
Output:
["false","true","1"]

Example 2:

Input:
CircularQueue(5)
isFull()
isEmpty()
enqueue(1)
enqueue(2)
dequeue()
dequeue()
enqueue(1)
enqueue(2)
enqueue(3)
enqueue(4)
enqueue(5)
isFull()
dequeue()
dequeue()
dequeue()
dequeue()
dequeue()
Output:
["false","true","1","2","true","1","2","3","4","5"]

Notice

it's guaranteed in the test cases we won't call enqueue if it's full and we also won't call dequeue if it's empty. So it's ok to raise exception in scenarios described above.
